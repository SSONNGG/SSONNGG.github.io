{"name":"设计模式","slug":"设计模式","count":1,"postlist":[{"title":"设计模式 | 单例模式","uid":"551213df1ede49a01e542dc0e5bc96b6","slug":"设计模式-单例模式","date":"2021-07-25T06:13:38.000Z","updated":"2021-07-25T06:25:58.409Z","comments":true,"path":"api/articles/设计模式-单例模式.json","keywords":null,"cover":[],"text":"零、定义单例模式的定义 保证一个类仅有一个实例，并提供一个访问它的全局访问点 其中单例模式分为懒汉式和饿汉式： 懒汉式：在装载类的时候不创建对象实例，等到第一次使用的时候，才去创建实例饿汉式：在装载类的时候就创建好实例对象 单例模式的本质：控制实例数目 一、单例模式的功能、范围以...","link":"","photos":[],"count_time":{"symbolsCount":340,"symbolsTime":"1 mins."},"categories":[{"name":"Java","slug":"Java","count":3,"path":"api/categories/Java.json"},{"name":"设计模式","slug":"设计模式","count":1,"path":"api/categories/设计模式.json"}],"tags":[{"name":"设计模式","slug":"设计模式","count":1,"path":"api/tags/设计模式.json"}],"author":{"name":"SongX_","slug":"blog-author","avatar":"https://z3.ax1x.com/2021/07/18/W3gCA1.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}]}